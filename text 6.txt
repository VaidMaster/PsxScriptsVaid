do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then local v69=0;while true do if (v69==0) then v19=v0(v3(v20,1,1));return "";end end else local v70=0;local v71;while true do if (0==v70) then v71=v2(v0(v20,16));if v19 then local v91=v5(v71,v19);v19=nil;return v91;else return v71;end break;end end end end);local function v21(v22,v23,v24)if v24 then local v72=575 -(515 + 60) ;local v73;while true do if ((0 + 0)==v72) then v73=(v22/((7 -(1971 -(278 + 1688)))^(v23-(80 -(68 + 11)))))%((1 + 1)^(((v24-(403 -(349 + 53))) -(v23-(1 + (685 -(596 + 89))))) + 1)) ;return v73-(v73%(2 -1)) ;end end else local v74=(1169 -(1130 + 39)) + 0 ;local v75;while true do if (v74==(1191 -(300 + 891))) then v75=(936 -(374 + (1644 -1084)))^(v23-(788 -((1085 -(9 + 296)) + 7))) ;return (((v22%(v75 + v75))>=v75) and (1 + 0 + 0)) or (0 + 0) ;end end end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1 ;return v38;end local function v26()local v39=0 -0 ;local v40;local v41;while true do if (v39==(533 -(160 + (698 -(279 + 47))))) then return (v41 * (749 -(79 + 414))) + v40 ;end if (v39==(0 + 0)) then v40,v41=v1(v16,v18,v18 + 1 + 1 );v18=v18 + (1638 -((1987 -(783 + 434)) + 866)) ;v39=1 + 0 ;end end end local function v27()local v42=241 -((962 -(280 + 512)) + 71) ;local v43;local v44;local v45;local v46;while true do if (v42==(1640 -(1616 + 24))) then v43,v44,v45,v46=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (9 -5) ;v42=1;end if (v42==(857 -(207 + 250 + 399))) then return (v46 * (16777398 -(37 + 145))) + (v45 * (60554 + 3966 + 1016)) + (v44 * (72 + 184)) + v43 ;end end end local function v28()local v47=0;local v48;local v49;local v50;local v51;local v52;local v53;while true do if (v47==(0 -0)) then v48=v27();v49=v27();v47=2 -1 ;end if (v47==(2 -1)) then v50=1;v51=(v21(v49,1 + 0 ,51 -31 ) * ((2 + 0)^(44 -12))) + v48 ;v47=35 -(6 + 27) ;end if ((672 -(69 + 600))==v47) then if (v52==(0 -(0 -0))) then if (v51==0) then return v53 * (0 + 0) ;else v52=719 -(252 + 466) ;v50=0 + 0 ;end elseif (v52==(3100 -(219 + 834))) then return ((v51==(1942 -((1691 -1351) + 1602))) and (v53 * ((1 -0)/(747 -(574 + 173))))) or (v53 * NaN) ;end return v8(v53,v52-(2372 -(1091 + (1599 -(1053 + 288)))) ) * (v50 + (v51/(2^(664 -(4 + 608))))) ;end if (v47==(3 -1)) then v52=v21(v49,40 -19 ,57 -26 );v53=((v21(v49,(1311 -(871 + 408)) + 0 )==(1542 -((1229 -(496 + 660)) + 1468))) and  -((980 + 361) -(591 + 749))) or 1 ;v47=3;end end end local function v29(v30)local v54=1425 -(400 + 1025) ;local v55;local v56;while true do if (v54==(0 -0)) then v55=nil;if  not v30 then v30=v27();if (v30==0) then return "";end end v54=1627 -((1400 -(53 + 409)) + 688) ;end if (v54==(1323 -(329 + 991))) then return v6(v56);end if (v54==2) then v56={};for v82=1 + 0 + 0 , #v55 do v56[v82]=v2(v1(v3(v55,v82,v82)));end v54=6 -3 ;end if (v54==((171 + 1636) -(1085 + 721))) then v55=v3(v16,v18,(v18 + v30) -(1 -0) );v18=v18 + v30 ;v54=1 + 1 ;end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v57=1941 -(550 + 1391) ;local v58;local v59;local v60;local v61;local v62;local v63;local v64;while true do if ((1729 -(861 + 868))==v57) then local v76=1218 -(108 + 1110) ;while true do if (v76~=(635 -(379 + 256))) then else v58=0 + 0 ;v59=nil;v76=1 + 0 ;end if (v76~=(1 + 0)) then else v57=3 -2 ;break;end end end if (v57==(1 + 0)) then local v77=0;while true do if (v77~=(0 -0)) then else v60=nil;v61=nil;v77=1;end if ((565 -(173 + 391))==v77) then v57=3 -1 ;break;end end end if (v57~=(3 -1)) then else local v78=1161 -(963 + 198) ;while true do if (v78~=(0 -0)) then else v62=nil;v63=nil;v78=2 -1 ;end if (v78~=1) then else v57=3;break;end end end if (v57==3) then v64=nil;while true do local v84=0 -0 ;while true do if (v84==(1 + 0)) then if (v58~=(2 + 1)) then else local v103=0 -0 ;while true do local v109=0 -0 ;while true do if (v109==(0 -0)) then if (v103~=(0 -0)) then else local v128=0 -0 ;while true do if (v128==(3 -2)) then v103=1;break;end if (v128==(0 + 0)) then for v131=2 -1 ,v27() do v60[v131-1 ]=v33();end for v133=1 + 0 ,v27() do v61[v133]=v27();end v128=3 -2 ;end end end if (v103==(1082 -(872 + 209))) then return v62;end break;end end end end if ((2 -1)==v58) then local v104=0 + 0 ;while true do if (v104~=(1 -0)) then else v64={};v58=3 -1 ;break;end if (v104==(0 -0)) then v62={v59,v60,nil,v61};v63=v27();v104=1721 -(601 + 1119) ;end end end break;end if (v84~=(1776 -(247 + 1529))) then else local v92=0 -0 ;while true do if (v92==(0 + 0)) then if (v58==2) then for v117=1,v63 do local v118=0;local v119;local v120;local v121;local v122;while true do if (v118==(1508 -(1412 + 95))) then v121=nil;v122=nil;v118=2;end if (v118==(793 -(112 + 681))) then v119=0 -0 ;v120=nil;v118=1;end if (v118==(2 + 0)) then while true do if ((2 -1)==v119) then v122=nil;while true do if (v120==(1 -0)) then if (v121==(1169 -(303 + 865))) then v122=v25()~=(0 + 0) ;elseif (v121==2) then v122=v28();elseif (v121~=(1 + 2)) then else v122=v29();end v64[v117]=v122;break;end if (v120==0) then local v138=0;while true do if (v138==(1 -0)) then v120=1;break;end if (v138==(0 -0)) then local v272=0 -0 ;while true do if (v272==(0 -0)) then v121=v25();v122=nil;v272=1;end if (v272==(1 + 0)) then v138=1;break;end end end end end end break;end if (v119~=(1679 -(210 + 1469))) then else local v135=951 -(29 + 922) ;while true do if ((0 -0)~=v135) then else v120=0 -0 ;v121=nil;v135=1;end if (v135==1) then v119=2 -1 ;break;end end end end break;end end end v62[3]=v25();for v123=2 -1 ,v27() do local v124=1595 -(881 + 714) ;local v125;local v126;local v127;while true do if (v124~=0) then else v125=0 -0 ;v126=nil;v124=1 -0 ;end if (v124==(1 -0)) then v127=nil;while true do if (v125~=0) then else local v136=1218 -(1064 + 154) ;while true do if ((1 + 0)~=v136) then else v125=1 + 0 ;break;end if ((0 -0)~=v136) then else v126=0 + 0 ;v127=nil;v136=1 + 0 ;end end end if (v125~=(2 -1)) then else while true do if (v126~=(0 -0)) then else v127=v25();if (v21(v127,1 + 0 ,542 -(10 + 531) )~=(0 -0)) then else local v183=0;local v184;local v185;local v186;local v187;local v188;local v189;while true do if (v183==(937 -(294 + 643))) then v184=0;v185=nil;v183=1 + 0 ;end if (v183~=2) then else v188=nil;v189=nil;v183=360 -(289 + 68) ;end if (v183==(1704 -(1197 + 506))) then v186=nil;v187=nil;v183=2;end if (v183==3) then while true do if (v184==(0 + 0)) then v185=0;v186=nil;v184=1030 -(621 + 408) ;end if (v184==1) then v187=nil;v188=nil;v184=1777 -(1077 + 698) ;end if (v184==(269 -(184 + 83))) then v189=nil;while true do if (v185==(4 -2)) then while true do if (v186~=(1 + 0)) then else local v393=0;local v394;local v395;while true do if (v393~=(0 + 0)) then else v394=0;v395=nil;v393=1 -0 ;end if (v393==(439 -(304 + 134))) then while true do if (v394~=0) then else v395=0 + 0 ;while true do if (v395==(1001 -(531 + 469))) then v186=5 -3 ;break;end if ((0 -0)==v395) then local v456=1931 -(145 + 1786) ;local v457;while true do if (v456==(0 -0)) then v457=0;while true do if (1==v457) then v395=1 + 0 ;break;end if (0~=v457) then else v189={v26(),v26(),nil,nil};if (v187==0) then local v475=0;local v476;while true do if (v475==0) then v476=0 -0 ;while true do if (v476==(1602 -(190 + 1412))) then v189[3 + 0 ]=v26();v189[4]=v26();break;end end break;end end elseif (v187==(1297 -(47 + 1249))) then v189[3]=v27();elseif (v187==2) then v189[552 -(495 + 54) ]=v27() -(2^(1491 -(383 + 1092))) ;elseif (v187==3) then local v485=0 -0 ;local v486;local v487;local v488;while true do if (v485~=(0 + 0)) then else v486=0 + 0 ;v487=nil;v485=1 + 0 ;end if (v485==1) then v488=nil;while true do if (v486~=0) then else local v489=0 + 0 ;while true do if (v489==(0 -0)) then v487=0 + 0 ;v488=nil;v489=2 -1 ;end if (v489~=(2 -1)) then else v486=1 + 0 ;break;end end end if ((1 + 0)==v486) then while true do if (v487~=0) then else v488=0;while true do if (v488==0) then v189[3]=v27() -(2^(1834 -(1295 + 523))) ;v189[861 -(146 + 711) ]=v26();break;end end break;end end break;end end break;end end end v457=278 -(153 + 124) ;end end break;end end end end break;end end break;end end end if (v186==(0 + 0)) then local v396=0 + 0 ;while true do if (v396==(1016 -(450 + 566))) then local v412=0;while true do if (v412==(0 + 0)) then v187=v21(v127,2,10 -7 );v188=v21(v127,1831 -(1392 + 435) ,6);v412=1;end if (v412==(944 -(305 + 638))) then v396=1;break;end end end if (v396==1) then v186=1 -0 ;break;end end end if (v186==(719 -(259 + 457))) then if (v21(v188,3 + 0 ,7 -4 )==(1 + 0)) then v189[4 + 0 ]=v64[v189[3 + 1 ]];end v59[v123]=v189;break;end if (v186==(5 -3)) then local v398=0;local v399;local v400;while true do if (v398~=(0 -0)) then else v399=410 -(236 + 174) ;v400=nil;v398=1;end if (v398~=(1891 -(1249 + 641))) then else while true do if (v399==(0 -0)) then v400=0 -0 ;while true do if (v400==(1 -0)) then v186=474 -(413 + 58) ;break;end if (v400==(0 + 0)) then local v458=0 + 0 ;while true do if (v458==(2 -1)) then v400=1;break;end if (v458~=(0 -0)) then else if (v21(v188,1,1 -0 )==(1363 -(265 + 1097))) then v189[1619 -(898 + 719) ]=v64[v189[2]];end if (v21(v188,1 + 1 ,2 + 0 )==1) then v189[1365 -(872 + 490) ]=v64[v189[8 -5 ]];end v458=1;end end end end break;end end break;end end end end break;end if (v185==(1 + 0)) then v188=nil;v189=nil;v185=8 -6 ;end if (v185==0) then v186=0;v187=nil;v185=1292 -(348 + 943) ;end end break;end end break;end end end break;end end break;end end break;end end end v58=3;end if (0==v58) then local v115=0 -0 ;while true do if (v115==(1 + 0)) then v61={};v58=1;break;end if ((1572 -(1437 + 135))==v115) then v59={};v60={};v115=1;end end end v92=1961 -(1396 + 564) ;end if (v92~=1) then else v84=1 + 0 ;break;end end end end end break;end end end local function v34(v35,v36,v37)local v65=0;local v66;local v67;local v68;while true do if (v65==1) then v68=v35[3];return function(...)local v85=0;local v86;local v87;local v88;local v89;local v90;while true do if (v85==3) then A,B=v32(v11(v90));if  not A[1] then local v105=0;local v106;while true do if (v105==0) then v106=v35[4][v86] or "?" ;error("Script error at ["   .. v106   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end break;end if (v85==1) then v88={...};v89=v12("#",...) -1 ;v85=2;end if (v85==0) then v86=1;v87= -1;v85=1;end if (v85==2) then v90=nil;v90=function()local v93=v66;local v94=v67;local v95=v68;local v96=v32;local v97={};local v98={};local v99={};for v107=0 + 0 ,v89 do if (((4062 -(823 + 173))>=(184 + 774)) and (v107>=v95)) then v97[v107-v95 ]=v88[v107 + 1 + 0 + 0 ];else v99[v107]=v88[v107 + (2 -(1 -0)) ];end end local v100=(v89-v95) + 1 ;local v101;local v102;while true do local v108=0 -0 ;while true do if (((8709 -(4503 + 222))>=((814 + 6504) -(1295 + 2537))) and (v108==(1 + 0))) then if (((2328 -(12 + 37))<3076) and (v102<=23)) then if ((v102<=11) or ((3949 -(174 + 722))>3159)) then if ((v102<=(3 + 2)) or ((16383 -11430)<1696)) then if ((270<((12528 -(970 + 458)) -7217)) and (v102<=((2 -0) -0))) then if (((1814 + 1516)>=2246) and (v102<=(0 + 0 + 0))) then v99[v101[2]]={};elseif ((v102==(1 -0)) or ((18 + (3195 -(810 + 462)))>(6830 -(136 + 1781)))) then v99[v101[9 -7 ]]=v99[v101[214 -(48 + 163) ]] -v101[4 + 0 ] ;else v99[v101[1131 -((2245 -(941 + 619)) + 444) ]]();end elseif ((v102<=3) or (((304 + 730) -731)>=(3022 + 346))) then v99[v101[4 -2 ]]=v101[3 + 0 ]~=(0 + 0) ;elseif ((588==(1770 -(625 + 557))) and (v102>((1110 -(48 + 1059)) + 1))) then v99[v101[7 -5 ]]=v99[v101[3]][v101[636 -(325 + (554 -247)) ]];elseif (((76 + 31)<=(3195 -1407)) and (v101[2]==v99[v101[4 -(0 -0) ]])) then v86=v86 + 1 ;else v86=v101[380 -((734 -390) + 33) ];end elseif ((2072<2280) and (v102<=(6 + 2))) then if (((399 + 469)<(3237 -((1535 -(656 + 622)) + 156 + 68))) and (v102<=(19 -13))) then if ((v99[v101[105 -(36 + 67) ]]==v101[869 -(236 + 629) ]) or ((945 + 2520)<=(1790 -((2220 -1364) + 284)))) then v86=v86 + (1939 -(1527 + 411)) ;else v86=v101[3 + 0 ];end elseif ((v102>(30 -23)) or ((2851 + 212)<=(1811 + 762))) then local v194=0;local v195;local v196;local v197;local v198;while true do if (((191 + 1104)<(3431 -(996 + 612))) and ((7 -(4 + 1))==v194)) then while true do if (((3443 -(47 + 569))>=(752 -(15 + 2))) and (v195==1)) then v198=v101[160 -(57 + 100) ];for v335=2 -(1369 -(679 + 689)) ,v198 do v197[v335]=v99[v196 + v335 ];end break;end if ((v195==0) or ((542 + 1887)>(4348 -(315 + 1415)))) then local v314=0 -(1171 -(358 + 813)) ;while true do if ((v314==(0 + (0 -0))) or ((2832 -(1121 + 857))>=(5475 -1733))) then v196=v101[(4 + 0) -(1 + 1) ];v197=v99[v196];v314=1 -0 ;end if ((v314==(2 -(1 + 0))) or (((15748 -11238) -2468)<=1643)) then v195=1;break;end end end end break;end if (((328 + 161)>=477) and ((770 -(383 + 387))==v194)) then v195=0;v196=nil;v194=681 -(155 + 525) ;end if (((13377 -9107)>=(3756 -1204)) and (v194==(1 + 0))) then v197=nil;v198=nil;v194=2;end end else v86=v101[2 + 1 ];end elseif (((5141 -(582 + 124))>=(1503 + 879)) and (v102<=(15 -6))) then local v141=1072 -(439 + (914 -281)) ;local v142;local v143;local v144;local v145;local v146;local v147;while true do if ((((1325 -(89 + 462)) + 1444)<(2910 + 1570)) and (v141==(3 + 0))) then while true do if ((v142==1) or (4763<=(799 + 2232))) then local v292=(0 + 0) -0 ;while true do if ((0==v292) or ((1419 + 2386)<=(6496 -3026))) then v145=nil;v146=nil;v292=1451 -(470 + 980) ;end if ((v292==1) or ((2630 -793)>=(5594 -(800 + 1790)))) then v142=2 + 0 ;break;end end end if (((6385 -5052)<=(3641 + 1207)) and (v142==(1 + 1))) then v147=nil;while true do if (((432 -219)<((2670 + 756) -1741)) and (v143==0)) then local v338=0;local v339;while true do if (((1735 -(12 + 626))<(4511 -(348 + 985))) and ((1835 -((1570 -852) + 1117))==v338)) then v339=0 -0 ;while true do if ((v339==(1 + 0)) or ((128 + 669)>(3919 -(1364 + (507 -223))))) then v143=601 -(151 + 449) ;break;end if (((3553 -(1134 + 46 + 393))==(3855 -(1152 + 723))) and (v339==(1483 -(260 + 1223)))) then local v404=0 + 0 ;while true do if (((5776 -(1299 + 310))>(15113 -11198)) and (v404==(481 -(345 + 135)))) then v339=4 -3 ;break;end if ((v404==(0 -0)) or ((2693 -1308)>2283)) then v144=v101[1646 -(1364 + 280) ];v145,v146=v96(v99[v144](v13(v99,v144 + 1 + 0 ,v101[473 -(432 + 38) ])));v404=2 -1 ;end end end end break;end end end if ((1916>=(1296 -(750 + 43))) and (v143==((33 + 1065) -(22 + 1074)))) then for v356=v144,v87 do local v357=0 + 0 ;local v358;while true do if ((v357==(0 + 0)) or ((293 + 649)==1562)) then v358=0 -(1666 -(960 + 706)) ;while true do if (((4282 -(625 + 621))>(10429 -8219)) and (v358==(0 + 0))) then v147=v147 + (3 -2) ;v99[v356]=v145[v147];break;end end break;end end end break;end if (((4662 -((1313 -(234 + 626)) + 662 + 90))>=(1168 + 303 + 514)) and (v143==(2 -1))) then local v340=0 + 0 ;while true do if ((v340==(1 + 0)) or ((3441 -2237)==(973 + 1447))) then v143=2 + (0 -0) ;break;end if ((1222<=2414) and (v340==0)) then local v378=1245 -(627 + 618) ;while true do if ((v378==(1 + 0 + 0)) or ((2798 -1195)<(1046 -(265 + 626)))) then v340=1 -0 ;break;end if (((3831 -(491 + 651))>650) and (v378==(1968 -((1781 -(1065 + 273)) + 1525)))) then v87=(v146 + v144) -(1 + 0) ;v147=0 + 0 ;v378=1;end end end end end end break;end if (((657 + 2060)>=(4322 -(930 + 694))) and (v142==(190 -(47 + 143)))) then v143=0 + 0 ;v144=nil;v142=1;end end break;end if ((1008==(263 + 745)) and (((126 + 166) -(103 + 187))==v141)) then v146=nil;v147=nil;v141=3;end if ((v141==(0 + 0 + 0)) or ((1915 + 2057)==(5782 -2435))) then v142=0 + 0 ;v143=nil;v141=1;end if (((3947 -(549 + (457 -297)))==(2364 + 374 + 500)) and (v141==(2 -1))) then v144=nil;v145=nil;v141=2;end end elseif ((v102==(2 + 8)) or ((1017 + 1468)==(7008 -2995))) then v37[v101[3]]=v99[v101[3 -1 ]];else v99[v101[2 + 0 ]]= #v99[v101[1 + 2 ]];end elseif ((v102<=17) or (2474<=(4373 -2822))) then if ((((38512 -30190) -5230)==(4244 -(809 + 343))) and (v102<=(12 + 2))) then if ((v102<=12) or (1370>=(19551 -14561))) then local v148=215 -(6 + 209) ;local v149;local v150;local v151;local v152;while true do if ((v148==((1 + 798) -(83 + 576 + 139))) or ((11273 -8050)<256)) then v151=nil;v152=nil;v148=2 -0 ;end if ((v148==(2 + 0)) or ((9986 -5005)<(4594 -(301 + 795)))) then while true do if ((v149==1) or ((878 -(515 + 190))>=(1395 + 1264))) then v152=nil;while true do if ((v150==((1 -0) + 0)) or (2762<795)) then v99[v151 + 1 + 0 ]=v152;v99[v151]=v152[v101[2 + 2 ]];break;end if (((13944 -10134)>(700 + 928)) and (v150==(0 + 0))) then local v344=0 -0 ;local v345;while true do if (((207 + 636)<2203) and (v344==0)) then v345=0 + 0 ;while true do if (((41 + 266)==307) and (v345==(1 + 0))) then v150=2 -1 ;break;end if ((v345==(0 -0)) or ((3550 -(319 + 743))>=(3295 -(107 + 141 + 396)))) then local v405=0;while true do if ((139<((206 + 501) -272)) and (v405==0)) then v151=v101[2];v152=v99[v101[3]];v405=1;end if ((811<=((1519 + 940) -((2438 -1670) + 64))) and (v405==(1 + 0))) then v345=1;break;end end end end break;end end end end break;end if (((2359 -(674 + 355))>=(160 -98)) and (v149==(0 -0))) then local v293=0 -0 ;while true do if ((v293==1) or ((906 + 949)>((1635 + 3974) -(476 + 390)))) then v149=43 -(39 + 3) ;break;end if ((v293==(0 + 0)) or ((940 + 451)>4434)) then v150=1989 -(83 + 1906) ;v151=nil;v293=1;end end end end break;end if ((v148==0) or ((2109 -(456 + 188 + 1309))>(1042 + 685))) then v149=0 + 0 ;v150=nil;v148=25 -(19 + 5) ;end end elseif ((2058>=(1842 -(908 + 692))) and (v102==(2 + 11))) then local v203=0 + 0 ;local v204;while true do if (((6897 -(4031 -(249 + 478)))<=(4258 + 654)) and (v203==0)) then v204=v101[(7 -5) + 0 ];v99[v204]=v99[v204](v13(v99,v204 + 1 ,v87));break;end end else local v205=0 + 0 ;local v206;local v207;while true do if (((13385 -8957)==4428) and (v205==(251 -(200 + 51)))) then local v285=(3561 -2363) -(655 + 543) ;while true do if ((((275 + 2789) -1293)>=((351 -212) + 12)) and (v285==(0 -0))) then v206=0 + 0 ;v207=nil;v285=174 -(47 + 126) ;end if (((2567 -1365)==(3240 -2038)) and (v285==(1546 -(1460 + 85)))) then v205=1279 -(188 + 1090) ;break;end end end if (((1521 + 1234)>=(1551 -(718 + 691))) and (v205==(1 + 0))) then while true do if ((4899>531) and (v206==0)) then v207=v101[488 -(405 + 81) ];do return v13(v99,v207,v207 + v101[1665 -(1504 + 158) ] );end break;end end break;end end end elseif ((136<=(3649 -(408 + 262))) and (v102<=15)) then v99[v101[2 -0 ]][v99[v101[1 + 2 ]]]=v101[1 + 3 ];elseif ((246<=(9487 -6955)) and (v102>(22 -6))) then do return;end else local v208=0;local v209;local v210;local v211;while true do if (((1 + 0)==v208) or ((108 + 3440)<(3198 -(423 + 1048)))) then v211=nil;while true do if (((1871 -487)==(99 + 1285)) and (1==v209)) then while true do if ((v210==(0 + 0)) or (((1105 + 3123) -3168)>=3856)) then v211=v101[2];v99[v211](v13(v99,v211 + (2 -1) ,v87));break;end end break;end if ((v209==(1035 -(668 + 367))) or ((1901 -((2856 -(67 + 1816)) + 776))>859)) then v210=0 -0 ;v211=nil;v209=1;end end break;end if (((1592 -(1524 + 68))==v208) or ((2542 + 2402)<=4361)) then v209=0;v210=nil;v208=1 + (1263 -(270 + 993)) ;end end end elseif ((v102<=(44 -24)) or ((1299 + 695)>3809)) then if (((6843 -4471)>((2873 -(953 + 1018)) -(511 + 30))) and (v102<=(884 -(608 + 258)))) then local v155=418 -(136 + (2235 -(1751 + 202))) ;local v156;local v157;local v158;local v159;while true do if (((3352 -((714 -331) + 538))<(8968 -4597)) and (v155==1)) then v158=nil;v159=nil;v155=1122 -(988 + 132) ;end if ((230==(1152 -(285 + 637))) and (v155==((619 -(489 + 130)) + 0))) then v156=59 -(41 + 18) ;v157=nil;v155=1018 -(808 + 209) ;end if (((3002 -(1028 + 486))<=(5257 -3076)) and (v155==(1 + 1))) then while true do if (((4130 -1738)<(5302 -(678 + 488))) and (v156==1)) then v159=nil;while true do if ((v157==(0 + 0)) or ((3038 -784)==(923 + 3671))) then local v346=(0 -0) -0 ;local v347;while true do if ((v346==(0 -0)) or (1720<=(2412 -(756 + (601 -289))))) then v347=0;while true do if ((((5489 -(58 + 81)) -(418 + 452))>1800) and (v347==1)) then v157=1 + 0 ;break;end if ((3117<=((5492 + 8690) -10251)) and (v347==(0 + 0))) then local v406=0 + 0 ;while true do if (((1235 -(34 + 420))<(2864 -(272 + 165))) and (v406==(1 + 0))) then v347=1982 -((2261 -1260) + 980) ;break;end if (((5133 -2672)==2461) and (v406==(1383 -((1033 -570) + (1454 -(225 + 309)))))) then v158=v101[2];v159=v99[v158];v406=1;end end end end break;end end end if (((3443 -(395 + 31 + 1199))<(7405 -4466)) and (v157==1)) then for v359=v158 + 1 + 0 ,v101[3] do v7(v159,v99[v359]);end break;end end break;end if (((9499 -5240)>=760) and (v156==0)) then v157=0;v158=nil;v156=1;end end break;end end elseif ((1830>=(2912 -(343 + 866))) and (v102==(24 -5))) then local v212=0;local v213;local v214;local v215;while true do if ((v212==1) or ((3490 -(19 + 353 + 877))>(2933 + 800))) then v215=nil;while true do if (((2257 -1761)<(5530 -(284 + 552))) and (v213==(0 -(0 + 0)))) then local v316=0 -0 ;while true do if ((v316==(74 -(24 + 49))) or (2049<=283)) then v213=1;break;end if (((521 + 846)<(379 + 1541)) and (v316==((1928 -(913 + 1015)) + 0))) then v214=0;v215=nil;v316=(1904 -(572 + 820)) -(36 + 475) ;end end end if ((v213==(4 -3)) or ((1659 -((1253 -862) + 304))==(4157 -(99 + 907)))) then while true do if ((((1823 -(148 + 1284)) + 3638)>3386) and (v214==((0 -0) -(0 -0)))) then v215=v101[2];v99[v215](v99[v215 + 1 ]);break;end end break;end end break;end if (((1348 + 793)>(3096 -(590 + 796))) and (v212==0)) then v213=0 -0 ;v214=nil;v212=1 + 0 ;end end else v99[v101[(5 -3) -0 ]]=v99[v101[3]][v99[v101[4]]];end elseif (((3861 -2275)<=2286) and (v102<=(56 -35))) then v99[v101[(1658 -(679 + 976)) -1 ]]=v37[v101[3]];elseif (((487 + 3649)==(1043 + 3093)) and (v102>22)) then if (((574 + 427)<(4339 -(3 + 5 + 12))) and v99[v101[2 + 0 ]]) then v86=v86 + 1 + 0 ;else v86=v101[12 -9 ];end else v99[v101[2 + 0 ]][v101[1 + 2 ]]=v99[v101[7 -3 ]];end elseif ((v102<=(12 + 23)) or (4376==(2896 + 1409))) then if ((((5470 + 539) -(1311 + 86))>((6462 -4567) + 1565)) and (v102<=(97 -(771 -(82 + 621))))) then if ((v102<=(1561 -(1193 + 342))) or (4760<((9991 -(116 + 411)) -4805))) then if (((102 + 101)<2606) and (v102<=24)) then local v162=0 -0 ;local v163;local v164;local v165;while true do if ((v162==0) or (1978<=(2133 -(1476 + 310)))) then v163=0 -0 ;v164=nil;v162=1 + 0 ;end if ((v162==((4 -3) + 0)) or ((6674 -(1289 + 582))==(1647 + 208))) then v165=nil;while true do if (((4244 -(812 + 510))<(8959 -4603)) and (v163==(1 + 0))) then for v301=1, #v98 do local v302=(2456 -1177) -(1155 + 124) ;local v303;local v304;local v305;while true do if ((v302==1) or ((1264 + 1382)<=(2063 -956))) then v305=nil;while true do if ((((1713 -(1117 + 596)) + 0)==v303) or (((5929 -2033) -1783)>=(4752 -((798 -(56 + 73)) + 300)))) then local v388=(0 -0) -0 ;while true do if ((v388==(50 -(8 + 42))) or (50==((2227 -(410 + 406)) -(152 + 475)))) then v304=(1956 -(1423 + 533)) + 0 ;v305=nil;v388=1 + 0 ;end if ((v388==(1 -0)) or ((4153 -2989)>(5410 -(484 + 675)))) then v303=1;break;end end end if ((4852>=((643 + 853) -(320 + 393))) and (v303==(3 -2))) then while true do if ((((16379 -11495) -3607)==(1001 + 276)) and (v304==0)) then v305=v98[v301];for v413=0 + 0 , #v305 do local v414=999 -(496 + 503) ;local v415;local v416;local v417;local v418;while true do if ((v414==(2 + 0)) or ((3204 -(1000 + 803))<=(1307 -((273 -122) + 896)))) then while true do if ((829<=(2995 + 2004)) and (v415==(0 + 0))) then local v459=0 + 0 ;while true do if (((2469 + 118)<(1440 + 2721)) and (v459==(0 -0))) then v416=v305[v413];v417=v416[1 + 0 ];v459=1;end if ((v459==(500 -(403 + 96))) or ((1143 + (3521 -(1029 + 928)))==2449)) then v415=1 + 0 ;break;end end end if ((v415==(100 -(53 + 46))) or (((10873 -(1010 + 524)) -5213)<4032)) then v418=v416[1364 -(1232 + 130) ];if (((3092 -(1055 + 440))==1597) and (v417==v99) and (v418>=v164)) then local v466=0 + 0 ;local v467;while true do if ((v466==(205 -((29 -11) + 187))) or ((4214 -2359)<=(1950 -(733 + 556)))) then v467=0;while true do if ((v467==(818 -(604 + 214))) or (((1433 + 4491) -(1202 + 227))==(387 + 42))) then v165[v418]=v417[v418];v416[1]=v165;break;end end break;end end end break;end end break;end if ((v414==(755 -(721 + 34))) or ((3404 -(125 + 124))<158)) then v415=1066 -(32 + 1034) ;v416=nil;v414=1;end if (((7202 -4740)>(2240 -(257 + 435))) and (1==v414)) then v417=nil;v418=nil;v414=8 -(2 + 4) ;end end end break;end end break;end end break;end if ((v302==(0 + 0)) or (1299>(4302 -(1071 + 839)))) then v303=(0 -0) + 0 ;v304=nil;v302=484 -(320 + 163) ;end end end break;end if ((v163==(0 -0)) or ((145 + 508)>=(6330 -(511 + 1019)))) then local v294=0;while true do if (((0 + 0)==v294) or (((7257 -(538 + 92)) -(438 + 1196))<=(6479 -3298))) then v164=v101[(1982 -(522 + 227)) -(697 + 534) ];v165={};v294=2 -1 ;end if (((1761 -(958 + (2577 -(121 + 1654))))==v294) or ((1937 -(418 + 10))>(5670 -(352 + 1622)))) then v163=4 -3 ;break;end end end end break;end end elseif ((v102==25) or ((2524 -974)<(2615 -(155 + 1834)))) then local v220=0 + 0 ;local v221;local v222;local v223;while true do if ((v220==(1 -0)) or ((2677 -(851 + 455 + 450))>=(5070 -(1798 + 96)))) then v223=nil;while true do if ((((2399 + 579) -1322)>718) and (v221==(2 -1))) then while true do if (((2563 -((1204 -(34 + 84)) + 180))<=(2577 -(1004 + 50 + 85))) and (v222==(0 -0))) then v223=v101[2];v99[v223](v13(v99,v223 + (2 -1) ,v101[3]));break;end end break;end if (((392 + 2842)==(2851 + (1343 -960))) and (v221==0)) then local v317=0 + 0 ;while true do if ((v317==(0 + 0)) or ((5226 -(1761 + 51))>(4708 -(426 + 810)))) then v222=1713 -(913 + 800) ;v223=nil;v317=1236 -(1030 + 205) ;end if (((5107 -(546 + 893))>=(1511 -(202 + 218 + 83))) and (v317==(1 + 0))) then v221=(8 -6) -1 ;break;end end end end break;end if ((v220==(0 + 0)) or ((1289 -753)>(5398 -(1328 + 163)))) then v221=490 -(218 + 272) ;v222=nil;v220=1385 -(1004 + 380) ;end end else v99[v101[2 + 0 ]][v99[v101[3]]]=v99[v101[17 -13 ]];end elseif ((v102<=27) or ((302 + 24)==(5864 -(763 + 135)))) then local v166=0;local v167;local v168;local v169;while true do if ((v166==(872 -(682 + 189))) or ((10434 -8034)>=(9245 -4786))) then v169=v99[v167 + 2 ];if ((((1887 -(832 + 15)) + 597)<=(4660 -((1715 -(701 + 551)) + 587 + 175))) and (v169>(1731 -(1710 + 21)))) then if (((516 + 1589)<=3756) and (v168>v99[v167 + 1 + 0 ])) then v86=v101[3];else v99[v167 + 3 + 0 ]=v168;end elseif (((8166 -5798)>(2093 -(14 + 880))) and (v168<v99[v167 + (406 -(151 + 254)) ])) then v86=v101[10 -7 ];else v99[v167 + 1 + 2 ]=v168;end break;end if (((286 -(236 + 3 + 4))<3627) and (v166==(0 + 0))) then local v274=0;while true do if (((5146 -(869 + 1092))>=(2735 -752)) and ((1 + 0)==v274)) then v166=1 + 0 ;break;end if ((0==v274) or ((5317 -(572 + 494))<(3567 -(43 + (1953 -(1153 + 668)))))) then v167=v101[1 + 1 ];v168=v99[v167];v274=(623 + 318) -(483 + 457) ;end end end end elseif ((v102>(82 -54)) or ((4175 -3082)<=(1497 -600))) then v36[v101[188 -(60 + 125) ]]=v99[v101[(2993 -(1164 + 445)) -(422 + 960) ]];elseif ((v99[v101[815 -(85 + 728) ]]==v99[v101[4 + 0 ]]) or ((59 + 1699)>=(328 + 2098))) then v86=v86 + (1 -(962 -(891 + 71))) ;else v86=v101[3 -0 ];end elseif ((v102<=(108 -76)) or (2232>=(1765 + (1310 -782)))) then if (((9065 -6774)<(2265 + 1512)) and (v102<=30)) then v99[v101[358 -(165 + 191) ]]=v99[v101[3]]/v101[209 -(131 + 74) ] ;elseif ((v102>(14 + (514 -(63 + 434)))) or (3696<(5417 -3233))) then v99[v101[1396 -(361 + 1033) ]]=v34(v94[v101[3]],nil,v37);else do return v99[v101[5 -3 ]];end end elseif ((v102<=33) or (1200==1262)) then v99[v101[869 -(376 + 491) ]]=v36[v101[1 + (346 -(183 + 161)) ]];elseif (((3910 -(1062 + 1794))>(952 -(86 + 58))) and (v102>(20 + 14))) then local v229=0 -0 ;local v230;local v231;local v232;local v233;while true do if ((2877<3613) and (v229==(2 + 0))) then while true do if (((468 + 726)<3670) and (v230==(2 -1))) then v233=0 -(703 -(44 + 659)) ;for v349=v231,v101[3 + 1 ] do local v350=(0 + 0) -0 ;while true do if ((v350==0) or ((2016 -420)>((5470 -(77 + 166)) -2451))) then v233=v233 + (1809 -(280 + 1528)) ;v99[v349]=v232[v233];break;end end end break;end if ((v230==(0 + 0)) or ((784 + 725)<(52 + (1682 -(55 + 1481))))) then local v318=0 + 0 ;local v319;while true do if ((((771 + 251) -600)==(575 -(56 + 97))) and (v318==(0 -0))) then v319=0 + 0 ;while true do if ((283==283) and (v319==((30 + 9) -((101 -74) + 12)))) then v231=v101[1435 -(365 + (4665 -3597)) ];v232={v99[v231](v99[v231 + (277 -(181 + 95)) ])};v319=1;end if (((9149 -6686)>(3541 -(795 + 858))) and (1==v319)) then v230=1 + 0 ;break;end end break;end end end end break;end if ((v229==0) or (3337<=((2949 -(1240 + 123)) + 123))) then local v286=350 -(346 + 4) ;while true do if (((765 + 910)==1675) and (v286==(1120 -(1048 + 71)))) then v229=117 -(5 + 111) ;break;end if (((0 -0)==v286) or ((4187 -(108 + 411))<(3734 -(1202 + 699)))) then v230=1235 -(453 + 782) ;v231=nil;v286=1 + 0 ;end end end if ((v229==(1 + 0)) or (810>=(1710 + 766))) then local v287=0 -0 ;while true do if (((3083 -(13 + 208))<=(4215 -(317 + 18))) and ((0 + 0)==v287)) then v232=nil;v233=nil;v287=1;end if ((v287==(1 + 0 + 0)) or ((1073 + 5 + 1509)>((4691 -(400 + 743)) -(74 + 460)))) then v229=1 + 1 ;break;end end end end else v99[v101[2 + 0 ]]=v99[v101[(7 + 1) -5 ]];end elseif ((((400 + 8147) -5281)<((3576 + 1772) -(525 + 564))) and (v102<=(65 -24))) then if ((v102<=38) or ((4320 -724)<=(2792 + 452 + 287))) then if (((134 + 669)<=2191) and (v102<=(139 -103))) then local v173=0 -0 ;local v174;while true do if (((4521 -(263 + 173))>2958) and (v173==(0 -0))) then v174=v101[(10 -6) -2 ];v99[v174]=v99[v174]();break;end end elseif (((946 -(54 + 338))<(2714 -(311 + 963))) and (v102>(976 -(630 + 309)))) then if ((((8741 -(420 + 55)) -4635)>(637 + 1023)) and  not v99[v101[1 + 1 ]]) then v86=v86 + (1364 -(729 + 634)) ;else v86=v101[3 + 0 ];end else local v236=750 -(187 + 563) ;local v237;local v238;local v239;local v240;while true do if ((v236==2) or ((8663 -5306)<=(1252 + 1897))) then while true do if (((2099 + 2292)>(3236 -(1580 + 258))) and (v237==(833 -(343 + 490)))) then local v320=720 -(513 + 207) ;while true do if ((1==v320) or (((1618 -(196 + 600)) + 1179)<(1349 + 294))) then v237=1047 -(100 + 946) ;break;end if (((2343 -(706 + (4464 -3500)))<=(1731 -882)) and (v320==(0 -0))) then v238=v94[v101[1311 -(455 + 853) ]];v239=nil;v320=(3 -2) + 0 ;end end end if ((((4554 -(6 + 28)) -((3132 -2249) + 753))>(1448 + 1033)) and ((1 + (0 -0))==v237)) then local v321=0;local v322;while true do if ((v321==((0 + 0) -0)) or ((2344 -(312 + 7 + 249))<=121)) then v322=0 -0 ;while true do if ((861<=((126 + 4054) -(167 + 63))) and (v322==(0 -0))) then local v402=0 + 0 ;while true do if (((2454 -(535 + 10))<(4425 -1496)) and (v402==(1737 -(1160 + 577)))) then v240={};v239=v10({},{__index=function(v419,v420)local v431=0 -0 ;local v432;local v433;while true do if (((19 + 9 + 2153)==2181) and (0==v431)) then local v452=1832 -(31 + 1801) ;while true do if ((3169==(15634 -12465)) and (v452==(0 + 0))) then v432=0 -(0 + 0) ;v433=nil;v452=1578 -(1177 + 400) ;end if ((v452==1) or ((6686 -1896)<((14183 -5776) -5613))) then v431=2 -1 ;break;end end end if ((v431==1) or (((628 -(388 + 200)) + 616)>=((16524 -10997) -(1692 + (253 -190))))) then while true do if ((v432==(0 -0)) or ((4262 -(45 + 16))<=(3725 + 84 + 83))) then local v461=0;local v462;while true do if (((4901 -2384)==(3498 -(275 + 706))) and (v461==(0 + 0))) then v462=(0 + 0) -0 ;while true do if ((v462==0) or ((443 -314)==(2744 -(58 + 15)))) then local v474=0;while true do if ((v474==((709 -(589 + 120)) -0)) or ((837 + 449 + 64)>=(4256 -(83 + 406)))) then v433=v240[v420];return v433[3 -2 ][v433[2 -0 ]];end end end end break;end end end end break;end end end,__newindex=function(v419,v420,v421)local v434=0 + 0 ;local v435;local v436;while true do if ((v434==0) or ((1165 + 1756)>(1123 + 2922))) then v435=0 -0 ;v436=nil;v434=2 -1 ;end if ((v434==1) or ((4016 -(146 + 215))<(15375 -12153))) then while true do if (((58 -19)<=(5104 -(24 + 12 + 125))) and (v435==((1073 -742) -((695 -(306 + 65)) + 7)))) then v436=v240[v420];v436[2 -1 ][v436[1 + 1 ]]=v421;break;end end break;end end end});v402=1 + 0 ;end if (((9619 -5625)>=3591) and ((4 -3)==v402)) then v322=2 -1 ;break;end end end if (((11356 -(7990 -(333 + 1291)))==(4743 + 247)) and (v322==1)) then v237=1218 -((217 -(5 + 72)) + 1076) ;break;end end break;end end end if (((1279 + (103 -75))>=331) and (v237==(2 + 0))) then for v351=2 -1 ,v101[4 -0 ] do local v352=0 + 0 ;local v353;local v354;local v355;while true do if (((399 + 240)<4509) and (v352==(0 -0))) then v353=0 -0 ;v354=nil;v352=1 + 0 ;end if ((v352==1) or ((31 + 431)>(2553 -(420 + 22 + 1363)))) then v355=nil;while true do if (((5467 -(683 + (1575 -(851 + 380))))>=(1641 -(106 + 24))) and (v353==(1 + 0))) then while true do if (((546 + 1494 + 817)>=1061) and (v354==1)) then if (((9603 -6844)==(7700 -4941)) and (v355[1]==(84 -50))) then v240[v351-(1 + (0 -0)) ]={v99,v355[3]};else v240[v351-(1945 -(1450 + 494)) ]={v36,v355[5 -2 ]};end v98[ #v98 + 1 + 0 ]=v240;break;end if ((v354==0) or ((574 + 2425)>(3211 + 1681))) then local v438=0 + 0 ;while true do if (((7093 -4203)>=(1314 -(15 + 505))) and (v438==(1345 -(648 + 697)))) then local v453=0 -0 ;while true do if ((v453==(0 + 0 + 0)) or ((6392 -3009)<1539)) then v86=v86 + (2 -1) ;v355=v93[v86];v453=1884 -(1019 + 864) ;end if ((v453==1) or ((3684 -(71 + 353))<=((13530 -8829) -1810))) then v438=1 + 0 + 0 ;break;end end end if (((1586 -(12 + 12 + 1417))<(20057 -15850)) and (v438==1)) then v354=1;break;end end end end break;end if ((v353==(1917 -((1648 -(751 + 152)) + 1172))) or ((4237 -(720 + 314))<=82)) then v354=895 -(211 + (1817 -(849 + 284))) ;v355=nil;v353=2 -1 ;end end break;end end end v99[v101[936 -(336 + 598) ]]=v34(v238,v239,v37);break;end end break;end if (((863 -(56 + 807))==v236) or (((1433 + 915) -(222 + (1922 -(427 + 11))))>=(6816 -3469))) then local v288=0;while true do if ((1510<3462) and (v288==(0 -0))) then v237=0 -0 ;v238=nil;v288=80 -(70 + 9) ;end if (((2064 -(520 + 289))<=(4148 -(613 + 478))) and (v288==(1 + 0))) then v236=3 -2 ;break;end end end if (((7979 -3553)>(3326 -1206)) and (v236==1)) then local v289=1634 -(485 + 1149) ;while true do if (((2418 + 558)>=(483 + 136)) and (v289==0)) then v239=nil;v240=nil;v289=1 + 0 + 0 ;end if ((4466>(523 + 3728)) and (v289==(1105 -(464 + 640)))) then v236=2 + 0 ;break;end end end end end elseif (((2590 -722)<=(3799 + 852)) and (v102<=(18 + 21))) then local v175=0 -0 ;local v176;local v177;local v178;local v179;local v180;while true do if ((v175==(0 -0)) or ((835 -516)>=3735)) then local v277=0 -0 ;while true do if (((2082 + 735)>=502) and (v277==1)) then v175=3 -2 ;break;end if ((2875<=(596 + 1858 + 921)) and (v277==(0 -0))) then v176=0 -0 ;v177=nil;v277=1;end end end if ((948==(1554 -(282 + 208 + 116))) and ((756 -(294 + 460))==v175)) then v180=nil;while true do if ((v176==(0 -0)) or (4225==(231 + (1539 -(209 + 791))))) then local v297=0 + 0 ;local v298;while true do if ((v297==0) or (1668>=(369 + 2536))) then v298=(1675 -(1140 + 535)) -0 ;while true do if ((1138<=(10075 -5356)) and (v298==(0 + 0))) then v177=v101[874 -(116 + 756) ];v178,v179=v96(v99[v177](v99[v177 + ((2 + 0) -(1 + 0)) ]));v298=1;end if ((v298==(295 -((83 -25) + 236))) or (134>=(1868 -(941 + 278)))) then v176=245 -(157 + 87) ;break;end end break;end end end if ((((4756 -(106 + 33)) -(71 + 1905))==(7712 -5071)) and (v176==1)) then local v299=(0 -0) + (0 -0) ;local v300;while true do if (((2608 -(1315 + 104))<(5905 -(1861 + 99))) and (v299==(0 -0))) then v300=0 + 0 ;while true do if (((3767 + 820)>=(5561 -3241)) and (v300==(0 + 0))) then v87=(v179 + v177) -(1 -0) ;v180=0;v300=1 -0 ;end if ((v300==(1 -0)) or ((2297 -(952 + 643))<=((2882 -(609 + 635)) -(126 + 1466)))) then v176=2 + 0 ;break;end end break;end end end if ((v176==(509 -(201 + 306))) or (3086<=(56 + 0))) then for v310=v177,v87 do local v311=(0 -0) + (0 -0) ;local v312;while true do if ((((6487 -(56 + 37)) -2713)>(2569 -(705 + 842))) and ((1673 -(1102 + 571))==v311)) then v312=0 -0 ;while true do if (((15525 -11359)>(1335 -(134 + 1053))) and (0==v312)) then v180=v180 + (56 -(20 + 15 + 20)) ;v99[v310]=v178[v180];break;end end break;end end end break;end end break;end if ((v175==(2 -1)) or ((545 + 1387)>(1271 + 1562))) then local v278=0;while true do if ((v278==0) or ((5162 -(2126 + 231))<=(914 + 1598))) then v178=nil;v179=nil;v278=1 + 0 ;end if ((v278==1) or ((3809 -(255 + 212))>=(1988 + 2620))) then v175=2 + 0 ;break;end end end end elseif ((v102>(65 -25)) or (1724<=(390 -(7 + 40)))) then v99[v101[867 -((255 -76) + 686) ]]=v101[75 -(4 + 68) ];else local v243=0 + 0 ;local v244;local v245;local v246;local v247;while true do if (((4601 -(1381 + 135))>(3157 -(315 + 484 + 2))) and ((0 -0)==v243)) then v244=0;v245=nil;v243=1405 -(687 + 717) ;end if (((922 + 35)>=(1416 -(261 + 240))) and (v243==(4 -2))) then while true do if ((37<(3748 -(807 + 1045))) and (v244==(919 -(451 + 142 + 326)))) then v245=v101[1454 -(86 + (3150 -(575 + 1209))) ];v246=v99[v245 + 2 ];v244=1312 -(96 + 1215) ;end if (((1098 + 2042)<4758) and (v244==(1 -0))) then local v326=(0 + 0) -0 ;while true do if ((v326==(510 -(121 + (1909 -1521)))) or ((4773 -1930)>=4942)) then v244=2;break;end if (((9310 -6462)>(494 + 1994)) and (v326==(0 -0))) then v247=v99[v245] + v246 ;v99[v245]=v247;v326=(273 + 9) -(75 + (2033 -(1239 + 588))) ;end end end if ((v244==((2631 -1932) -(435 + 262))) or (((8063 -5135) + 504)<2451)) then if (((2390 -(198 + 1043))==(2428 -1279)) and (v246>0)) then if ((v247<=v99[v245 + 1 + 0 ]) or ((3475 -(3368 -(167 + 740)))==(2371 + 32))) then local v382=0 -0 ;local v383;local v384;while true do if ((v382==(768 -(690 + 78))) or ((5612 -(320 + 815))<=(2580 -(709 + 382)))) then v383=0 + 0 ;v384=nil;v382=1 + 0 ;end if (((7056 -3162)>(3428 -(279 + 1168))) and (v382==(1494 -(1012 + 481)))) then while true do if ((((6124 -(27 + 252)) -(676 + 153 + 198))>(4932 -(129 + 10))) and (v383==(0 + 0))) then v384=0 -0 ;while true do if ((v384==0) or ((11376 -7415)<(899 -(811 + 37)))) then v86=v101[7 -4 ];v99[v245 + (8 -5) ]=v247;break;end end break;end end break;end end end elseif (((11106 -6888)>((10658 -6199) -1715)) and (v247>=v99[v245 + (2 -1) ])) then local v385=0 -(1131 -(267 + 864)) ;local v386;while true do if (((3331 -(235 + 173 + 651))<=3272) and ((1507 -(112 + 1395))==v385)) then v386=0;while true do if ((311<=(5930 -(892 + 629))) and (v386==((0 -0) -0))) then v86=v101[7 -4 ];v99[v245 + ((20 -9) -8) ]=v247;break;end end break;end end end break;end end break;end if (((5899 -2920)>(2747 -(53 + 1682))) and (v243==1)) then v246=nil;v247=nil;v243=899 -(869 + 28) ;end end end elseif ((v102<=44) or ((8176 -3739)==(4833 -(98 + 31)))) then if ((v102<=(27 + 15)) or ((1861 + 1062)==(460 + 3619))) then for v181=v101[561 -(183 + 376) ],v101[3] do v99[v181]=nil;end elseif (((573 + 803)<(1060 + 1253)) and (v102>(947 -(421 + 483)))) then local v248=0;local v249;local v250;while true do if (((1723 + 2804)>=(4628 -1049)) and (v248==0)) then local v290=0 + 0 ;while true do if ((v290==(266 -(16 + 179 + 70))) or ((1722 + 2027)==2608)) then v248=1;break;end if (((1491 + 2936)>=(1842 + 1730)) and (v290==(0 + 0))) then v249=0 -0 ;v250=nil;v290=(1531 -(994 + 536)) -(675 -(17 + 658)) ;end end end if ((v248==(917 -(26 + 890))) or ((1947 -(1729 + 160))>365)) then while true do if ((373<(4435 -(34 + 2891))) and ((0 -0)==v249)) then v250=v99[v101[7 -3 ]];if (((3464 + 1036)>=((14 + 0) -9)) and  not v250) then v86=v86 + 1 + 0 ;else local v360=(241 + 1734) -(710 + 1265) ;local v361;local v362;while true do if ((v360==(0 + 0)) or ((85 + 325)<=(104 + 26))) then v361=(1105 + 196) -(196 + 1105) ;v362=nil;v360=3 -2 ;end if ((((2623 -(316 + 889)) -944)<((592 + 663) -501)) and (((1 -0) + (0 -0))==v360)) then while true do if ((0==v361) or ((2995 -(1188 + 239))>=4857)) then v362=147 -(58 + 89) ;while true do if ((((746 -(400 + 346)) + 0)==v362) or (((56548 -44410) -9374)>4493)) then v99[v101[2]]=v250;v86=v101[3 -0 ];break;end end break;end end break;end end end break;end end break;end end else v99[v101[378 -((1012 -(119 + 787)) + 270) ]][v101[3]]=v101[4];end elseif (((1063 -386)<=(7226 -4215)) and (v102<=((43 + 55) -52))) then if (((359 + 173)==(1516 -984)) and (v102==(92 -47))) then local v253=0 + 0 ;local v254;local v255;while true do if ((v253==1) or (3736<=(6918 -4927))) then while true do if ((v254==(34 -(24 + 10))) or ((689 + 862 + 777)<(1287 -(65 + 65)))) then v255=v101[(2 + 3) -3 ];v99[v255]=v99[v255](v13(v99,v255 + 1 + 0 ,v101[2 + 1 ]));break;end end break;end if ((v253==(0 + 0)) or (310>=(4528 -(83 + 71)))) then local v291=0;while true do if (((1491 + 2837)>(857 + 1367)) and (v291==(1 -0))) then v253=1898 -(1806 + 91) ;break;end if (((1187 -(95 + 69))<=((7574 -(914 + 588)) -(686 + 605))) and (v291==0)) then v254=1762 -(1650 + 112) ;v255=nil;v291=1 + 0 ;end end end end else local v256=0;local v257;local v258;local v259;local v260;while true do if ((v256==0) or ((13979 -(8994 + 1025))<=879)) then v257=232 -((67 -42) + 207) ;v258=nil;v256=888 -(837 + 50) ;end if ((v256==(1 -0)) or (3364<=(919 -(469 + 65)))) then v259=nil;v260=nil;v256=2;end if (((748 + 2912)==(2493 + (2865 -(411 + 1287)))) and (v256==(1 + 1))) then while true do if ((v257==((1729 -(1232 + 497)) -0)) or ((1604 + 3006)==(4317 -2009))) then v258=0;v259=nil;v257=1 + 0 ;end if (((2297 -(10 + 2 + 39))>((2277 -(27 + 259)) -(973 + 1))) and (v257==(1 + (673 -(247 + 426))))) then v260=nil;while true do if ((4220>(14122 -10331)) and (v258==((0 -0) + 0))) then local v370=0 + 0 ;local v371;while true do if ((1688>((2299 -1222) -462)) and (v370==((25 + 1584) -(653 + 956)))) then v371=392 -(360 + 32) ;while true do if ((v371==(1772 -(1395 + (1173 -797)))) or ((8406 -3912)<(2183 + 1053))) then v258=647 -(95 + 551) ;break;end if ((v371==(0 + 0)) or (881==((112 -68) + 518))) then local v422=0 -0 ;while true do if ((v422==(1 + 0 + 0)) or ((1402 -(251 + 129))<(2271 -(161 + 1342)))) then v371=1 + 0 ;break;end if ((v422==(0 -0)) or ((1113 + 815)==(2401 -(395 + 218)))) then v259=v101[10 -7 ];v260=v99[v259];v422=1 + 0 ;end end end end break;end end end if ((v258==(1 -0)) or ((9 + 8)==(7827 -3107))) then for v387=v259 + (1158 -(651 + 506)) ,v101[9 -5 ] do v260=v260   .. v99[v387] ;end v99[v101[2]]=v260;break;end end break;end end break;end end end elseif ((3861>(280 + 116)) and (v102==((2639 -(665 + 55)) -(687 + 1185)))) then local v261=0 + 0 ;local v262;local v263;while true do if ((v261==(0 + 0 + 0)) or ((3761 -2052)==(1924 + 2618))) then v262=655 -(632 + 23) ;v263=nil;v261=1 + 0 ;end if ((v261==(1 + 0)) or ((1446 + 2803)<=(1659 -(361 + 126)))) then while true do if ((89<=3050) and (v262==(0 -0))) then v263=v101[2 + 0 ];v99[v263]=v99[v263](v99[v263 + 1 + 0 ]);break;end end break;end end else local v264=(1309 -(786 + 58)) -(388 + 77) ;local v265;local v266;local v267;local v268;local v269;local v270;local v271;while true do if ((v264==(929 -(63 + (1845 -(421 + 558))))) or (((8791 -(899 + 546)) -4404)==(2151 -643))) then v265=(0 -0) + 0 ;v266=nil;v264=1;end if ((v264==1) or (4453<(3310 -(753 + 526)))) then v267=nil;v268=nil;v264=6 -4 ;end if ((v264==(8 -5)) or ((3642 -(788 + 453))==((21441 -16231) -2411))) then v271=nil;while true do if ((v265==(1 -0)) or ((695 + 3193)<=(273 + 275))) then local v332=0;while true do if (((5355 -(213 + 833))==4309) and (v332==(2 -1))) then v265=(2836 -(777 + 921)) -(1043 + 93) ;break;end if (((9022 -6546)==(4221 -(727 + 1018))) and (v332==0)) then v268=nil;v269=nil;v332=2 -1 ;end end end if (((18746 -14451)>(1961 + 1886)) and (v265==(0 -0))) then local v333=0 + 0 ;while true do if (((455 + 2325)==2780) and ((0 + 0)==v333)) then v266=0 + 0 ;v267=nil;v333=1 + 0 ;end if ((v333==(1128 -(411 + 716))) or (((6618 -(196 + 868)) -(657 + 776))==(5 + (1095 -(196 + 176))))) then v265=3 -2 ;break;end end end if (((4184 -2139)<=(3218 + 1764)) and (v265==3)) then while true do if (((1522 + 1297)<=(4276 -(458 + 221))) and (v266==3)) then if (v271 or ((2673 -1246)>(4445 -(622 + 297)))) then local v391=0 -(0 -0) ;local v392;while true do if ((v391==0) or ((322 + 149)>=(2102 + 2525))) then v392=0 + 0 ;while true do if ((((87 -50) + 14)<(6249 -(1651 + 264))) and (v392==0)) then v99[v269]=v271;v86=v101[10 -7 ];break;end end break;end end else v86=v86 + 1 ;end break;end if ((((1316 -443) + 3147)>(8447 -5815)) and (v266==(810 -(566 + 243)))) then local v373=0 -0 ;local v374;while true do if (((5706 -(3053 + 536))<(4711 -(828 + 485))) and (v373==(0 + 0))) then v374=0 + 0 ;while true do if (((6064 -(538 + 532))>(941 + 580)) and (v374==(161 -((74 -34) + (447 -(14 + 313)))))) then v266=1076 -(567 + 507) ;break;end if ((3052<(2121 + 1351)) and (v374==(1563 -(76 + 1484 + 3)))) then v269=v267 + 2 + 0 ;v270={v99[v267](v99[v267 + (1 -0) ],v99[v269])};v374=(1 + 0) -0 ;end end break;end end end if ((((1038 -(184 + 75)) + 189)<((2677 -775) + 2575)) and (v266==(0 + 0))) then local v375=0 + 0 ;while true do if (((3352 + 1517)>3225) and ((1493 -(303 + 1189))==v375)) then v266=2 -1 ;break;end if ((44==(7 + 37)) and (v375==(724 -(475 + 249)))) then local v403=0;while true do if ((((2144 -(260 + 343)) -((1479 -(400 + 178)) + 640))==v403) or ((45 + (3353 -(806 + 887)))>=(4619 -(997 + 391 + 94)))) then v267=v101[2 + 0 ];v268=v101[4];v403=1 -(0 + 0) ;end if ((4800>=(1784 -(209 + 37))) and (v403==1)) then v375=(1 + 0) -0 ;break;end end end end end if ((v266==(1841 -(1546 + 293))) or ((12939 -8131)<=(636 + 1753))) then local v376=0 -(0 -0) ;local v377;while true do if (((4846 -3731)<((3095 + 1401) -1029)) and (v376==(0 + 0))) then v377=0 -0 ;while true do if (((2064 -1279)<(1225 + 475)) and ((0 + (0 -0))==v377)) then for v441=1,v268 do v99[v269 + v441 ]=v270[v441];end v271=v270[1 -0 ];v377=1;end if (((6306 -2060)>(3653 -(1469 + 417))) and (v377==(3 -2))) then v266=3;break;end end break;end end end end break;end if ((1475<(16295 -12310)) and (v265==(3 -(1 + 0)))) then local v334=1648 -(164 + 1484) ;while true do if (((0 + 0)==v334) or ((3886 -(264 + 150))==((2464 -(10 + 934)) + (1274 -546)))) then v270=nil;v271=nil;v334=1 + 0 + 0 ;end if ((v334==(1 + 0 + 0)) or ((2383 -(589 + 897))>2864)) then v265=1173 -(793 + 377) ;break;end end end end break;end if ((v264==(7 -5)) or ((5019 -1578)==(5336 -2749))) then v269=nil;v270=nil;v264=1314 -(112 + 1199) ;end end end v86=v86 + 1 + 0 ;break;end if ((v108==(103 -(36 + 67))) or ((839 -585)==(1247 + 1001 + 1180))) then local v116=750 -(105 + 645) ;while true do if ((((620 -(230 + 61)) -216)<((13915 -(100 + 878)) -8914)) and ((0 + 0)==v116)) then v101=v93[v86];v102=v101[2 -1 ];v116=649 -(468 + 180) ;end if (((4 -3)==v116) or ((1976 -1249)==(3203 + 938))) then v108=1;break;end end end end end end;v85=3;end end end;end if (v65==0) then v66=v35[1];v67=v35[2];v65=1;end end end return v34(v33(),{},v17)(...);end vv9(),...);end